/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DummyIntegrator,
  DummyIntegratorInterface,
} from "../../../contracts/test/DummyIntegrator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "voteContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dummyERC20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voteIndex",
        type: "uint256",
      },
    ],
    name: "DoesNotPermitVoting",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "FunctionDoesntPermitVoting",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voteContract",
        type: "address",
      },
    ],
    name: "IsNotWhitelistedVoteContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MayNotCallFunction",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voteContract",
        type: "address",
      },
    ],
    name: "NotRegisteredVoteContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "changeOwnerSelector",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newSomeoneElse",
        type: "address",
      },
    ],
    name: "changeSomeoneElse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "changeSomeoneElseSelector",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dummyERC20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalVotesStarted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voteIndex",
        type: "uint256",
      },
    ],
    name: "getVoteInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getVotingContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "someoneElse",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "votingParams",
        type: "bytes",
      },
      {
        internalType: "bytes4",
        name: "_callbackSelector",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "_callbackArgs",
        type: "bytes",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voteIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "option",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527fa6f9dae13f6f9f7de69814715796059e291f78e951670d244dd3b07111b8bb18600760146101000a81548163ffffffff021916908360e01c02179055507f4ce9dbb60c489ec3df3c2867b5aa42cfaefb23f0608cb2c48ed9f5fda49bf6d3600760186101000a81548163ffffffff021916908360e01c02179055503480156200008d57600080fd5b5060405162001d9c38038062001d9c8339818101604052810190620000b391906200066d565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000157600760149054906101000a900460e01b6001620001c360201b60201c565b62000179600760189054906101000a900460e01b6001620001c360201b60201c565b6200019a600760149054906101000a900460e01b836200022f60201b60201c565b620001bb600760189054906101000a900460e01b836200022f60201b60201c565b5050620007d6565b80600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b620002428160016200025860201b60201c565b620002548282620003bc60201b60201c565b5050565b8160006200026c826200058760201b60201c565b8015620003185750735354453d6fa8a3a285abe7b7b34dadc70ae1a2fc73ffffffffffffffffffffffffffffffffffffffff1663c3c5a547836040518263ffffffff1660e01b8152600401620002c39190620006fc565b60206040518083038186803b158015620002dc57600080fd5b505afa158015620002f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003179190620006ae565b5b9050806200035f57816040517f4876ce32000000000000000000000000000000000000000000000000000000008152600401620003569190620006fc565b60405180910390fd5b82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b80600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166200044e57806040517f32cfb064000000000000000000000000000000000000000000000000000000008152600401620004459190620006fc565b60405180910390fd5b82600080827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff16620004f157806040517ff32ddd7f000000000000000000000000000000000000000000000000000000008152600401620004e8919062000719565b60405180910390fd5b8260026000867bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b60008173ffffffffffffffffffffffffffffffffffffffff166301ffc9a77ff2b1390e000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401620005e4919062000719565b60206040518083038186803b158015620005fd57600080fd5b505afa15801562000612573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006389190620006ae565b9050919050565b6000815190506200065081620007a2565b92915050565b6000815190506200066781620007bc565b92915050565b600080604083850312156200068157600080fd5b600062000691858286016200063f565b9250506020620006a4858286016200063f565b9150509250929050565b600060208284031215620006c157600080fd5b6000620006d18482850162000656565b91505092915050565b620006e58162000736565b82525050565b620006f68162000756565b82525050565b6000602082019050620007136000830184620006da565b92915050565b6000602082019050620007306000830184620006eb565b92915050565b6000620007438262000782565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620007ad8162000736565b8114620007b957600080fd5b50565b620007c7816200074a565b8114620007d357600080fd5b50565b6115b680620007e66000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639d56f35f116100715780639d56f35f146101905780639d58234c146101ae578063a6f9dae1146101cc578063b384abef146101e8578063d3b914ad14610204578063d7f4407214610222576100b4565b806325fd1948146100b9578063446fdb1a146100d75780634ce9dbb6146101075780636002c479146101235780638d824273146101415780638da5cb5b14610172575b600080fd5b6100c161023e565b6040516100ce9190611256565b60405180910390f35b6100f160048036038101906100ec9190610fa9565b610248565b6040516100fe9190611177565b60405180910390f35b610121600480360381019061011c9190610f57565b6102c3565b005b61012b610378565b604051610138919061121b565b60405180910390f35b61015b60048036038101906101569190611051565b61039e565b604051610169929190611192565b60405180910390f35b61017a6103f8565b6040516101879190611177565b60405180910390f35b61019861041e565b6040516101a591906111bb565b60405180910390f35b6101b6610431565b6040516101c39190611177565b60405180910390f35b6101e660048036038101906101e19190610f57565b610457565b005b61020260048036038101906101fd91906110a3565b61050c565b005b61020c610607565b60405161021991906111bb565b60405180910390f35b61023c60048036038101906102379190610fd2565b61061a565b005b6000600454905090565b600060026000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600760189054906101000a900460e01b60006102de82610718565b806102ee57506102ed826107c1565b5b90508061033257336040517ff52330400000000000000000000000000000000000000000000000000000000081526004016103299190611177565b60405180910390fd5b82600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806003600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360008581526020019081526020016000206001015491509150915091565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760189054906101000a900460e01b81565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760149054906101000a900460e01b600061047282610718565b806104825750610481826107c1565b5b9050806104c657336040517ff52330400000000000000000000000000000000000000000000000000000000081526004016104bd9190611177565b60405180910390fd5b82600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105699190611177565b60206040518083038186803b15801561058157600080fd5b505afa158015610595573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b9919061107a565b116105f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f090611236565b60405180910390fd5b61060382826108d6565b5050565b600760149054906101000a900460e01b81565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016106779190611177565b60206040518083038186803b15801561068f57600080fd5b505afa1580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c7919061107a565b11610707576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fe90611236565b60405180910390fd5b610712838383610ad4565b50505050565b600060026000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16149050919050565b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161490506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156108c25750600760189054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b905081806108cd5750805b92505050919050565b8160006003600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b7c1122760036000858152602001908152602001600020600101546040518263ffffffff1660e01b815260040161095e9190611256565b60206040518083038186803b15801561097657600080fd5b505afa15801561098a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ae9190610f80565b9050806109f257816040517ff5cc21b50000000000000000000000000000000000000000000000000000000081526004016109e99190611256565b60405180910390fd5b6003600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634de8737c600360008781526020019081526020016000206001015433866040518463ffffffff1660e01b8152600401610a7b93929190611271565b602060405180830381600087803b158015610a9557600080fd5b505af1158015610aa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acd919061107a565b5050505050565b600082600080827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff16610b7657806040517ff32ddd7f000000000000000000000000000000000000000000000000000000008152600401610b6d91906111bb565b60405180910390fd5b60026000857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610c7657806040517f32cfb064000000000000000000000000000000000000000000000000000000008152600401610c6d9190611177565b60405180910390fd5b600160046000828254610c89919061132b565b92505081905550610c98610e56565b60026000877bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050806000015173ffffffffffffffffffffffffffffffffffffffff1663d7f440728888886040518463ffffffff1660e01b8152600401610d82939291906111d6565b602060405180830381600087803b158015610d9c57600080fd5b505af1158015610db0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd4919061107a565b8160200181815250508060036000600454815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015590505060045493505050509392505050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000610e99610e94846112cd565b6112a8565b905082815260208101848484011115610eb157600080fd5b610ebc848285611419565b509392505050565b600081359050610ed381611524565b92915050565b600081519050610ee88161153b565b92915050565b600081359050610efd81611552565b92915050565b600082601f830112610f1457600080fd5b8135610f24848260208601610e86565b91505092915050565b600081359050610f3c81611569565b92915050565b600081519050610f5181611569565b92915050565b600060208284031215610f6957600080fd5b6000610f7784828501610ec4565b91505092915050565b600060208284031215610f9257600080fd5b6000610fa084828501610ed9565b91505092915050565b600060208284031215610fbb57600080fd5b6000610fc984828501610eee565b91505092915050565b600080600060608486031215610fe757600080fd5b600084013567ffffffffffffffff81111561100157600080fd5b61100d86828701610f03565b935050602061101e86828701610eee565b925050604084013567ffffffffffffffff81111561103b57600080fd5b61104786828701610f03565b9150509250925092565b60006020828403121561106357600080fd5b600061107184828501610f2d565b91505092915050565b60006020828403121561108c57600080fd5b600061109a84828501610f42565b91505092915050565b600080604083850312156110b657600080fd5b60006110c485828601610f2d565b92505060206110d585828601610f2d565b9150509250929050565b6110e881611381565b82525050565b6110f78161139f565b82525050565b6000611108826112fe565b6111128185611309565b9350611122818560208601611428565b61112b816114ea565b840191505092915050565b61113f816113f5565b82525050565b6000611152601a8361131a565b915061115d826114fb565b602082019050919050565b611171816113eb565b82525050565b600060208201905061118c60008301846110df565b92915050565b60006040820190506111a760008301856110df565b6111b46020830184611168565b9392505050565b60006020820190506111d060008301846110ee565b92915050565b600060608201905081810360008301526111f081866110fd565b90506111ff60208301856110ee565b818103604083015261121181846110fd565b9050949350505050565b60006020820190506112306000830184611136565b92915050565b6000602082019050818103600083015261124f81611145565b9050919050565b600060208201905061126b6000830184611168565b92915050565b60006060820190506112866000830186611168565b61129360208301856110df565b6112a06040830184611168565b949350505050565b60006112b26112c3565b90506112be828261145b565b919050565b6000604051905090565b600067ffffffffffffffff8211156112e8576112e76114bb565b5b6112f1826114ea565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611336826113eb565b9150611341836113eb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113765761137561148c565b5b828201905092915050565b600061138c826113cb565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061140082611407565b9050919050565b6000611412826113cb565b9050919050565b82818337600083830152505050565b60005b8381101561144657808201518184015260208101905061142b565b83811115611455576000848401525b50505050565b611464826114ea565b810181811067ffffffffffffffff82111715611483576114826114bb565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f43616c6c6572206e6565647320746f20686f6c642044554d4d59000000000000600082015250565b61152d81611381565b811461153857600080fd5b50565b61154481611393565b811461154f57600080fd5b50565b61155b8161139f565b811461156657600080fd5b50565b611572816113eb565b811461157d57600080fd5b5056fea2646970667358221220a33bee40f6c37a5c58cf50e18013ce9f08460b50b93b52e4b5a1ad7c0b9a113964736f6c63430008040033";

type DummyIntegratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyIntegratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyIntegrator__factory extends ContractFactory {
  constructor(...args: DummyIntegratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    voteContract: string,
    _dummyERC20: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DummyIntegrator> {
    return super.deploy(
      voteContract,
      _dummyERC20,
      overrides || {}
    ) as Promise<DummyIntegrator>;
  }
  override getDeployTransaction(
    voteContract: string,
    _dummyERC20: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      voteContract,
      _dummyERC20,
      overrides || {}
    );
  }
  override attach(address: string): DummyIntegrator {
    return super.attach(address) as DummyIntegrator;
  }
  override connect(signer: Signer): DummyIntegrator__factory {
    return super.connect(signer) as DummyIntegrator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyIntegratorInterface {
    return new utils.Interface(_abi) as DummyIntegratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyIntegrator {
    return new Contract(address, _abi, signerOrProvider) as DummyIntegrator;
  }
}
