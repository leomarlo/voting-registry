/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  CanVoteAndImplement,
  CanVoteAndImplementInterface,
} from "../../../contracts/integration/CanVoteAndImplement";

const _abi = [
  {
    inputs: [],
    name: "getTotalVotesStarted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voteIndex",
        type: "uint256",
      },
    ],
    name: "getVoteInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "votingParams",
        type: "bytes",
      },
      {
        internalType: "bytes4",
        name: "_callbackSelector",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "_callbackArgs",
        type: "bytes",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voteIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "option",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class CanVoteAndImplement__factory {
  static readonly abi = _abi;
  static createInterface(): CanVoteAndImplementInterface {
    return new utils.Interface(_abi) as CanVoteAndImplementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CanVoteAndImplement {
    return new Contract(address, _abi, signerOrProvider) as CanVoteAndImplement;
  }
}
